#include <iostream>
#include <ctime>
#include <wchar.h>
#include <Windows.h>
#include <algorithm>
#include <vector>
#include <string>
#include <string.h>
#include <stdlib.h>
#include <cstring>
#include <conio.h>
#include <iomanip>
#include <process.h>
#include <Windows.h>
#include <time.h>
#include <ctime>
#include <cstdlib>
#include <typeinfo>
#include <fstream>

using namespace std;
class elevator {
private:
    int floor = 0;
    const int maxFloor = 15;
public :
    void elevatorfl(int fl) {
        char floorMovement;
        cout << "\nEnter - 'u' to raise ";
        cout << "\nEnter - 'd' to reduce ";
        cin >> floorMovement;
        if (floorMovement == 'u') {
            elevatorUp();
            this->floor == floorMovement;
        }
        else if (floorMovement == 'd') {
            elevatorDown();
            //movementTime();
            this->floor == floorMovement;
        }
    }
    /*void movementTime() {
        int timeSleep = rand() % 1000 - 5000;
        Sleep(timeSleep);
    }*/
    void elevatorUp();
    void elevatorDown();
    bool Legal();
};
void elevator::elevatorDown() {
    int floor1;
    cout << "\nWhere do you want to go?(floor num) ";
    cin >> floor1;
    if (floor1 > floor) {
        cout << "\nIt was necessary to choose 'u'";
    }
    else if (floor1 < floor) {
        cout << "\nYour floor " << floor1;
        floor == floor1;
    }
    else if (floor1 == floor) {
        cout << "\nYou're already on this floor";
    }
}
void elevator::elevatorUp() {
    int floor1;
    cout << "\nWhere do you want to go?(floor num) ";
    cin >> floor1;
    if (floor1 < floor) {
        cout << "\nIt was necessary to choose 'd'";
    }
    else if (floor1 > floor) {
        cout << "\nYour floor " << floor1;
        floor == floor1;
    }
    else if (floor1 == floor) {
        cout << "\nYou're already on this floor";
    }
    
}
/*bool elevator::Legal() {
    return floor > 0;
}*/

int main() {
    elevator elevator1;
    while (true) {
        elevator1.elevatorfl(0);
    }
}
