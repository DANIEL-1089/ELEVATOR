#include <iostream>
#include <ctime>
#include <wchar.h>
#include <Windows.h>
#include <algorithm>
#include <vector>
#include <string>
#include <string.h>
#include <stdlib.h>
#include <cstring>
#include <conio.h>
#include <iomanip>
#include <process.h>
#include <Windows.h>
#include <time.h>
#include <ctime>
#include <cstdlib>
#include <typeinfo>
#include <fstream>
#include <thread>
#include <chrono>
#include "person.h"


using namespace std;

bool elevatorPersTrueFalse = false;
ostream estimOfPers;

class elevatorPers : public elevatorPers {
private:
    const int minFloor = 0;
    int floor = 0;
    const int maxFloor = 15;
public :
    void elevatorfl() {
        elevatorPersTrueFalse = true;
        if (floor < minFloor)
            abort;
        else if (floor > maxFloor)
            abort;
        char floorMovement;
        cout << "\nEnter - 'u' to raise ";
        cout << "\nEnter - 'd' to reduce ";
        cin >> floorMovement;
        if (floorMovement == 'u') {
            elevatorUp(floor);
            this->floor == floorMovement;
        }
        else if (floorMovement == 'd') {
            elevatorDown(floor);
        }
        floor == floorMovement;
    }
    void elevatorUp(int &fl);
    void elevatorDown(int &fl);
    bool Legal(int& fl) {
        return fl >= minFloor;
    }
    friend class person;
};
void elevatorPers::elevatorDown(int &fl) {
    int floor1;
    cout << "\nWhere do you want to go?(floor num) ";
    cin >> floor1;
    if (Legal(floor1) == true) 
    {}
    else if (Legal(floor1) == false) 
        exit(0);

    if (floor1 == floor) {
        cout << "\nYou already here";
    }
    else if (fl < floor1) {
        cout << "\nThe elevator is coming";
        Sleep(5000);
        cout << "\nYour floor " << floor1;
        myEstimation();
        floor == floor1;
    }
    if (floor1 < fl) {
        cout << "\nIt was necessary to choose 'd'";
    }
}
void elevatorPers::elevatorUp(int &fl) {
    int floor1;
    cout << "\nWhere do you want to go?(floor num) ";
    cin >> floor1;
    if (Legal(floor1) == true) 
    {}
    else if (Legal(floor1) == false) {
        exit(0);
    }

    if (floor1 == floor) {
        cout << "\nYou already here";
    }
    else if (floor1 > fl) {
        cout << "\nThe elevator is coming";
        Sleep(5000);
        cout << "\nYour floor " << floor1;
        myEstimation();
        floor == floor1;
    }
    else if (floor1 < fl) {
        cout << "\nIt was necessary to choose 'd'";
    }
}

class elevatorCompany : public elevatorPers {
public:
    void averageEstimation();
};
void elevatorCompany::averageEstimation() {
    int averEst;
    while (true) {
        if (elevatorPersTrueFalse == true) {
            estimOfPers << estim;
            for (int j = 0; j < estimOfPers.eof(); j++) {
                
            }
        }
    }
    
}


int main() {
    elevatorCompany elevatorComp1;
    elevatorPers elevatorPers1;
    while (true) {
        elevatorPers1.elevatorfl();
        elevatorComp1.averageEstimation();
    }
}
